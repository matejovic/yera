{
  "version": 3,
  "sources": ["../../preact-render-to-string/src/util.js", "../../preact-render-to-string/src/index.js", "../../preact-iso/src/prerender.js"],
  "sourcesContent": ["export const VOID_ELEMENTS = /^(?:area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\nexport const UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\nexport const NAMESPACE_REPLACE_REGEX = /^(xlink|xmlns|xml)([A-Z])/;\nexport const HTML_LOWER_CASE = /^accessK|^auto[A-Z]|^ch|^col|cont|cross|dateT|encT|form[A-Z]|frame|hrefL|inputM|maxL|minL|noV|playsI|readO|rowS|spellC|src[A-Z]|tabI|item[A-Z]/;\nexport const SVG_CAMEL_CASE = /^ac|^ali|arabic|basel|cap|clipPath$|clipRule$|color|dominant|enable|fill|flood|font|glyph[^R]|horiz|image|letter|lighting|marker[^WUH]|overline|panose|pointe|paint|rendering|shape|stop|strikethrough|stroke|text[^L]|transform|underline|unicode|units|^v[^i]|^w|^xH/;\n\n// DOM properties that should NOT have \"px\" added when numeric\nconst ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n\nexport let indent = (s, char) =>\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nexport let isLargeString = (s, length, ignoreLines) =>\n\tString(s).length > (length || 40) ||\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n\tString(s).indexOf('<') !== -1;\n\nconst JS_TO_CSS = {};\n\nconst IS_NON_DIMENSIONAL = new Set([\n\t'animation-iteration-count',\n\t'border-image-outset',\n\t'border-image-slice',\n\t'border-image-width',\n\t'box-flex',\n\t'box-flex-group',\n\t'box-ordinal-group',\n\t'column-count',\n\t'fill-opacity',\n\t'flex',\n\t'flex-grow',\n\t'flex-negative',\n\t'flex-order',\n\t'flex-positive',\n\t'flex-shrink',\n\t'flood-opacity',\n\t'font-weight',\n\t'grid-column',\n\t'grid-row',\n\t'line-clamp',\n\t'line-height',\n\t'opacity',\n\t'order',\n\t'orphans',\n\t'stop-opacity',\n\t'stroke-dasharray',\n\t'stroke-dashoffset',\n\t'stroke-miterlimit',\n\t'stroke-opacity',\n\t'stroke-width',\n\t'tab-size',\n\t'widows',\n\t'z-index',\n\t'zoom'\n]);\n\nconst CSS_REGEX = /[A-Z]/g;\n// Convert an Object style to a CSSText string\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (val != null && val !== '') {\n\t\t\tconst name =\n\t\t\t\tprop[0] == '-'\n\t\t\t\t\t? prop\n\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\tlet suffix = ';';\n\t\t\tif (\n\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t// Exclude custom-attributes\n\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t!IS_NON_DIMENSIONAL.has(name)\n\t\t\t) {\n\t\t\t\tsuffix = 'px;';\n\t\t\t}\n\t\t\tstr = str + name + ':' + val + suffix;\n\t\t}\n\t}\n\treturn str || undefined;\n}\n\n/**\n * Get flattened children from the children prop\n * @param {Array} accumulator\n * @param {any} children A `props.children` opaque object.\n * @returns {Array} accumulator\n * @private\n */\nexport function getChildren(accumulator, children) {\n\tif (Array.isArray(children)) {\n\t\tchildren.reduce(getChildren, accumulator);\n\t} else if (children != null && children !== false) {\n\t\taccumulator.push(children);\n\t}\n\treturn accumulator;\n}\n\nfunction markAsDirty() {\n\tthis.__d = true;\n}\n\nexport function createComponent(vnode, context) {\n\treturn {\n\t\t__v: vnode,\n\t\tcontext,\n\t\tprops: vnode.props,\n\t\t// silently drop state updates\n\t\tsetState: markAsDirty,\n\t\tforceUpdate: markAsDirty,\n\t\t__d: true,\n\t\t// hooks\n\t\t__h: []\n\t};\n}\n", "import {\n\tencodeEntities,\n\tstyleObjToCss,\n\tUNSAFE_NAME,\n\tNAMESPACE_REPLACE_REGEX,\n\tHTML_LOWER_CASE,\n\tSVG_CAMEL_CASE\n} from './util.js';\nimport { options, h, Fragment } from 'preact';\nimport {\n\tCHILDREN,\n\tCOMMIT,\n\tCOMPONENT,\n\tDIFF,\n\tDIFFED,\n\tDIRTY,\n\tNEXT_STATE,\n\tPARENT,\n\tRENDER,\n\tSKIP_EFFECTS,\n\tVNODE\n} from './constants.js';\n\n/** @typedef {import('preact').VNode} VNode */\n\nconst EMPTY_ARR = [];\nconst isArray = Array.isArray;\nconst assign = Object.assign;\n\n// Global state for the current render pass\nlet beforeDiff, afterDiff, renderHook, ummountHook;\n\n/**\n * Render Preact JSX + Components to an HTML string.\n * @param {VNode} vnode\tJSX Element / VNode to render\n * @param {Object} [context={}] Initial root context object\n * @returns {string} serialized HTML\n */\nexport function renderToString(vnode, context) {\n\t// Performance optimization: `renderToString` is synchronous and we\n\t// therefore don't execute any effects. To do that we pass an empty\n\t// array to `options._commit` (`__c`). But we can go one step further\n\t// and avoid a lot of dirty checks and allocations by setting\n\t// `options._skipEffects` (`__s`) too.\n\tconst previousSkipEffects = options[SKIP_EFFECTS];\n\toptions[SKIP_EFFECTS] = true;\n\n\t// store options hooks once before each synchronous render call\n\tbeforeDiff = options[DIFF];\n\tafterDiff = options[DIFFED];\n\trenderHook = options[RENDER];\n\tummountHook = options.unmount;\n\n\tconst parent = h(Fragment, null);\n\tparent[CHILDREN] = [vnode];\n\n\ttry {\n\t\treturn _renderToString(\n\t\t\tvnode,\n\t\t\tcontext || EMPTY_OBJ,\n\t\t\tfalse,\n\t\t\tundefined,\n\t\t\tparent\n\t\t);\n\t} finally {\n\t\t// options._commit, we don't schedule any effects in this library right now,\n\t\t// so we can pass an empty queue to this hook.\n\t\tif (options[COMMIT]) options[COMMIT](vnode, EMPTY_ARR);\n\t\toptions[SKIP_EFFECTS] = previousSkipEffects;\n\t\tEMPTY_ARR.length = 0;\n\t}\n}\n\n// Installed as setState/forceUpdate for function components\nfunction markAsDirty() {\n\tthis.__d = true;\n}\n\nconst EMPTY_OBJ = {};\n\n/**\n * @param {VNode} vnode\n * @param {Record<string, unknown>} context\n */\nfunction renderClassComponent(vnode, context) {\n\tlet type = /** @type {import(\"preact\").ComponentClass<typeof vnode.props>} */ (vnode.type);\n\n\tlet isMounting = true;\n\tlet c;\n\tif (vnode[COMPONENT]) {\n\t\tisMounting = false;\n\t\tc = vnode[COMPONENT];\n\t\tc.state = c[NEXT_STATE];\n\t} else {\n\t\tc = new type(vnode.props, context);\n\t}\n\n\tvnode[COMPONENT] = c;\n\tc[VNODE] = vnode;\n\n\tc.props = vnode.props;\n\tc.context = context;\n\t// turn off stateful re-rendering:\n\tc[DIRTY] = true;\n\n\tif (c.state == null) c.state = EMPTY_OBJ;\n\n\tif (c[NEXT_STATE] == null) {\n\t\tc[NEXT_STATE] = c.state;\n\t}\n\n\tif (type.getDerivedStateFromProps) {\n\t\tc.state = assign(\n\t\t\t{},\n\t\t\tc.state,\n\t\t\ttype.getDerivedStateFromProps(c.props, c.state)\n\t\t);\n\t} else if (isMounting && c.componentWillMount) {\n\t\tc.componentWillMount();\n\n\t\t// If the user called setState in cWM we need to flush pending,\n\t\t// state updates. This is the same behaviour in React.\n\t\tc.state = c[NEXT_STATE] !== c.state ? c[NEXT_STATE] : c.state;\n\t} else if (!isMounting && c.componentWillUpdate) {\n\t\tc.componentWillUpdate();\n\t}\n\n\tif (renderHook) renderHook(vnode);\n\n\treturn c.render(c.props, c.state, context);\n}\n\n/**\n * Recursively render VNodes to HTML.\n * @param {VNode|any} vnode\n * @param {any} context\n * @param {boolean} isSvgMode\n * @param {any} selectValue\n * @param {VNode} parent\n * @returns {string}\n */\nfunction _renderToString(vnode, context, isSvgMode, selectValue, parent) {\n\t// Ignore non-rendered VNodes/values\n\tif (vnode == null || vnode === true || vnode === false || vnode === '') {\n\t\treturn '';\n\t}\n\n\t// Text VNodes: escape as HTML\n\tif (typeof vnode !== 'object') {\n\t\tif (typeof vnode === 'function') return '';\n\t\treturn encodeEntities(vnode + '');\n\t}\n\n\t// Recurse into children / Arrays\n\tif (isArray(vnode)) {\n\t\tlet rendered = '';\n\t\tparent[CHILDREN] = vnode;\n\t\tfor (let i = 0; i < vnode.length; i++) {\n\t\t\tlet child = vnode[i];\n\t\t\tif (child == null || typeof child === 'boolean') continue;\n\n\t\t\trendered =\n\t\t\t\trendered +\n\t\t\t\t_renderToString(child, context, isSvgMode, selectValue, parent);\n\t\t}\n\t\treturn rendered;\n\t}\n\n\t// VNodes have {constructor:undefined} to prevent JSON injection:\n\tif (vnode.constructor !== undefined) return '';\n\n\tvnode[PARENT] = parent;\n\tif (beforeDiff) beforeDiff(vnode);\n\n\tlet type = vnode.type,\n\t\tprops = vnode.props,\n\t\tcctx = context,\n\t\tcontextType,\n\t\trendered,\n\t\tcomponent;\n\n\t// Invoke rendering on Components\n\tif (typeof type === 'function') {\n\t\tif (type === Fragment) {\n\t\t\t// Fragments are the least used components of core that's why\n\t\t\t// branching here for comments has the least effect on perf.\n\t\t\tif (props.UNSTABLE_comment) {\n\t\t\t\treturn '<!--' + encodeEntities(props.UNSTABLE_comment || '') + '-->';\n\t\t\t}\n\n\t\t\trendered = props.children;\n\t\t} else {\n\t\t\tcontextType = type.contextType;\n\t\t\tif (contextType != null) {\n\t\t\t\tlet provider = context[contextType.__c];\n\t\t\t\tcctx = provider ? provider.props.value : contextType.__;\n\t\t\t}\n\n\t\t\tif (type.prototype && typeof type.prototype.render === 'function') {\n\t\t\t\trendered = /**#__NOINLINE__**/ renderClassComponent(vnode, cctx);\n\t\t\t\tcomponent = vnode[COMPONENT];\n\t\t\t} else {\n\t\t\t\tcomponent = {\n\t\t\t\t\t__v: vnode,\n\t\t\t\t\tprops,\n\t\t\t\t\tcontext: cctx,\n\t\t\t\t\t// silently drop state updates\n\t\t\t\t\tsetState: markAsDirty,\n\t\t\t\t\tforceUpdate: markAsDirty,\n\t\t\t\t\t__d: true,\n\t\t\t\t\t// hooks\n\t\t\t\t\t__h: []\n\t\t\t\t};\n\t\t\t\tvnode[COMPONENT] = component;\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (component[DIRTY] && count++ < 25) {\n\t\t\t\t\tcomponent[DIRTY] = false;\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\trendered = type.call(component, props, cctx);\n\t\t\t\t}\n\t\t\t\tcomponent[DIRTY] = true;\n\t\t\t}\n\n\t\t\tif (component.getChildContext != null) {\n\t\t\t\tcontext = assign({}, context, component.getChildContext());\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t(type.getDerivedStateFromError || component.componentDidCatch) &&\n\t\t\t\toptions.errorBoundaries\n\t\t\t) {\n\t\t\t\tlet str = '';\n\t\t\t\t// When a component returns a Fragment node we flatten it in core, so we\n\t\t\t\t// need to mirror that logic here too\n\t\t\t\tlet isTopLevelFragment =\n\t\t\t\t\trendered != null &&\n\t\t\t\t\trendered.type === Fragment &&\n\t\t\t\t\trendered.key == null;\n\t\t\t\trendered = isTopLevelFragment ? rendered.props.children : rendered;\n\n\t\t\t\ttry {\n\t\t\t\t\tstr = _renderToString(\n\t\t\t\t\t\trendered,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tisSvgMode,\n\t\t\t\t\t\tselectValue,\n\t\t\t\t\t\tvnode\n\t\t\t\t\t);\n\t\t\t\t\treturn str;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (type.getDerivedStateFromError) {\n\t\t\t\t\t\tcomponent[NEXT_STATE] = type.getDerivedStateFromError(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (component.componentDidCatch) {\n\t\t\t\t\t\tcomponent.componentDidCatch(err, {});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (component[DIRTY]) {\n\t\t\t\t\t\trendered = renderClassComponent(vnode, context);\n\t\t\t\t\t\tcomponent = vnode[COMPONENT];\n\n\t\t\t\t\t\tif (component.getChildContext != null) {\n\t\t\t\t\t\t\tcontext = assign({}, context, component.getChildContext());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet isTopLevelFragment =\n\t\t\t\t\t\t\trendered != null &&\n\t\t\t\t\t\t\trendered.type === Fragment &&\n\t\t\t\t\t\t\trendered.key == null;\n\t\t\t\t\t\trendered = isTopLevelFragment ? rendered.props.children : rendered;\n\n\t\t\t\t\t\tstr = _renderToString(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tisSvgMode,\n\t\t\t\t\t\t\tselectValue,\n\t\t\t\t\t\t\tvnode\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn str;\n\t\t\t\t} finally {\n\t\t\t\t\tif (afterDiff) afterDiff(vnode);\n\t\t\t\t\tvnode[PARENT] = undefined;\n\n\t\t\t\t\tif (ummountHook) ummountHook(vnode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// When a component returns a Fragment node we flatten it in core, so we\n\t\t// need to mirror that logic here too\n\t\tlet isTopLevelFragment =\n\t\t\trendered != null && rendered.type === Fragment && rendered.key == null;\n\t\trendered = isTopLevelFragment ? rendered.props.children : rendered;\n\n\t\t// Recurse into children before invoking the after-diff hook\n\t\tconst str = _renderToString(\n\t\t\trendered,\n\t\t\tcontext,\n\t\t\tisSvgMode,\n\t\t\tselectValue,\n\t\t\tvnode\n\t\t);\n\t\tif (afterDiff) afterDiff(vnode);\n\t\tvnode[PARENT] = undefined;\n\n\t\tif (ummountHook) ummountHook(vnode);\n\n\t\treturn str;\n\t}\n\n\t// Serialize Element VNodes to HTML\n\tlet s = '<' + type,\n\t\thtml = '',\n\t\tchildren;\n\n\tfor (let name in props) {\n\t\tlet v = props[name];\n\n\t\tswitch (name) {\n\t\t\tcase 'children':\n\t\t\t\tchildren = v;\n\t\t\t\tcontinue;\n\n\t\t\t// VDOM-specific props\n\t\t\tcase 'key':\n\t\t\tcase 'ref':\n\t\t\tcase '__self':\n\t\t\tcase '__source':\n\t\t\t\tcontinue;\n\n\t\t\t// prefer for/class over htmlFor/className\n\t\t\tcase 'htmlFor':\n\t\t\t\tif ('for' in props) continue;\n\t\t\t\tname = 'for';\n\t\t\t\tbreak;\n\t\t\tcase 'className':\n\t\t\t\tif ('class' in props) continue;\n\t\t\t\tname = 'class';\n\t\t\t\tbreak;\n\n\t\t\t// Form element reflected properties\n\t\t\tcase 'defaultChecked':\n\t\t\t\tname = 'checked';\n\t\t\t\tbreak;\n\t\t\tcase 'defaultSelected':\n\t\t\t\tname = 'selected';\n\t\t\t\tbreak;\n\n\t\t\t// Special value attribute handling\n\t\t\tcase 'defaultValue':\n\t\t\tcase 'value':\n\t\t\t\tname = 'value';\n\t\t\t\tswitch (type) {\n\t\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\t\tcase 'textarea':\n\t\t\t\t\t\tchildren = v;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t// <select value> is serialized as a selected attribute on the matching option child\n\t\t\t\t\tcase 'select':\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t// Add a selected attribute to <option> if its value matches the parent <select> value\n\t\t\t\t\tcase 'option':\n\t\t\t\t\t\tif (selectValue == v && !('selected' in props)) {\n\t\t\t\t\t\t\ts = s + ' selected';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'dangerouslySetInnerHTML':\n\t\t\t\thtml = v && v.__html;\n\t\t\t\tcontinue;\n\n\t\t\t// serialize object styles to a CSS string\n\t\t\tcase 'style':\n\t\t\t\tif (typeof v === 'object') {\n\t\t\t\t\tv = styleObjToCss(v);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'acceptCharset':\n\t\t\t\tname = 'accept-charset';\n\t\t\t\tbreak;\n\t\t\tcase 'httpEquiv':\n\t\t\t\tname = 'http-equiv';\n\t\t\t\tbreak;\n\n\t\t\tdefault: {\n\t\t\t\tif (NAMESPACE_REPLACE_REGEX.test(name)) {\n\t\t\t\t\tname = name.replace(NAMESPACE_REPLACE_REGEX, '$1:$2').toLowerCase();\n\t\t\t\t} else if (UNSAFE_NAME.test(name)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if ((name[4] === '-' || name === 'draggable') && v != null) {\n\t\t\t\t\t// serialize boolean aria-xyz or draggable attribute values as strings\n\t\t\t\t\t// `draggable` is an enumerated attribute and not Boolean. A value of `true` or `false` is mandatory\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable\n\t\t\t\t\tv += '';\n\t\t\t\t} else if (isSvgMode) {\n\t\t\t\t\tif (SVG_CAMEL_CASE.test(name)) {\n\t\t\t\t\t\tname =\n\t\t\t\t\t\t\tname === 'panose1'\n\t\t\t\t\t\t\t\t? 'panose-1'\n\t\t\t\t\t\t\t\t: name.replace(/([A-Z])/g, '-$1').toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t} else if (HTML_LOWER_CASE.test(name)) {\n\t\t\t\t\tname = name.toLowerCase();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// write this attribute to the buffer\n\t\tif (v != null && v !== false && typeof v !== 'function') {\n\t\t\tif (v === true || v === '') {\n\t\t\t\ts = s + ' ' + name;\n\t\t\t} else {\n\t\t\t\ts = s + ' ' + name + '=\"' + encodeEntities(v + '') + '\"';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (UNSAFE_NAME.test(type)) {\n\t\t// this seems to performs a lot better than throwing\n\t\t// return '<!-- -->';\n\t\tthrow new Error(`${type} is not a valid HTML tag name in ${s}>`);\n\t}\n\n\tif (html) {\n\t\t// dangerouslySetInnerHTML defined this node's contents\n\t} else if (typeof children === 'string') {\n\t\t// single text child\n\t\thtml = encodeEntities(children);\n\t} else if (children != null && children !== false && children !== true) {\n\t\t// recurse into this element VNode's children\n\t\tlet childSvgMode =\n\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\n\t\thtml = _renderToString(children, context, childSvgMode, selectValue, vnode);\n\t}\n\n\tif (afterDiff) afterDiff(vnode);\n\tvnode[PARENT] = undefined;\n\tif (ummountHook) ummountHook(vnode);\n\n\t// Emit self-closing tag for empty void elements:\n\tif (!html && SELF_CLOSING.has(type)) {\n\t\treturn s + '/>';\n\t}\n\n\treturn s + '>' + html + '</' + type + '>';\n}\n\nconst SELF_CLOSING = new Set([\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n]);\n\nexport default renderToString;\nexport const render = renderToString;\nexport const renderToStaticMarkup = renderToString;\n", "import { h, options, cloneElement } from 'preact';\nimport renderToString from 'preact-render-to-string';\n\nlet vnodeHook;\n\nconst old = options.vnode;\noptions.vnode = vnode => {\n\tif (old) old(vnode);\n\tif (vnodeHook) vnodeHook(vnode);\n};\n\n/**\n * @param {ReturnType<h>} vnode The root JSX element to render (eg: `<App />`)\n * @param {object} [options]\n * @param {number} [options.maxDepth = 10] The maximum number of nested asynchronous operations to wait for before flushing\n * @param {object} [options.props] Additional props to merge into the root JSX element\n */\nexport default async function prerender(vnode, options) {\n\toptions = options || {};\n\n\tconst maxDepth = options.maxDepth || 10;\n\tconst props = options.props;\n\tlet tries = 0;\n\n\tif (typeof vnode === 'function') {\n\t\tvnode = h(vnode, props);\n\t} else if (props) {\n\t\tvnode = cloneElement(vnode, props);\n\t}\n\n\tconst render = () => {\n\t\tif (++tries > maxDepth) return;\n\t\ttry {\n\t\t\treturn renderToString(vnode);\n\t\t} catch (e) {\n\t\t\tif (e && e.then) return e.then(render);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tlet links = new Set();\n\tvnodeHook = ({ type, props }) => {\n\t\tif (type === 'a' && props && props.href && (!props.target || props.target === '_self')) {\n\t\t\tlinks.add(props.href);\n\t\t}\n\t};\n\n\ttry {\n\t\tlet html = await render();\n\t\thtml += `<script type=\"isodata\"></script>`;\n\t\treturn { html, links };\n\t} finally {\n\t\tvnodeHook = null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["UNSAFE_NAME", "NAMESPACE_REPLACE_REGEX", "HTML_LOWER_CASE", "SVG_CAMEL_CASE", "ENCODED_ENTITIES", "encodeEntities", "str", "length", "test", "last", "i", "out", "ch", "charCodeAt", "slice", "JS_TO_CSS", "IS_NON_DIMENSIONAL", "Set", "CSS_REGEX", "styleObjToCss", "s", "prop", "val", "name", "replace", "toLowerCase", "suffix", "startsWith", "has", "beforeDiff", "afterDiff", "renderHook", "ummountHook", "EMPTY_ARR", "isArray", "Array", "assign", "Object", "renderToString", "vnode", "context", "previousSkipEffects", "options", "unmount", "parent", "h", "Fragment", "_renderToString", "EMPTY_OBJ", "markAsDirty", "this", "__d", "renderClassComponent", "c", "type", "isMounting", "state", "props", "getDerivedStateFromProps", "componentWillMount", "componentWillUpdate", "render", "isSvgMode", "selectValue", "rendered", "child", "constructor", "contextType", "component", "cctx", "UNSTABLE_comment", "children", "provider", "__c", "value", "__", "prototype", "__v", "setState", "forceUpdate", "__h", "count", "call", "getChildContext", "getDerivedStateFromError", "componentDidCatch", "errorBoundaries", "key", "err", "html", "v", "__html", "Error", "SELF_CLOSING", "renderToString", "props"]
}
